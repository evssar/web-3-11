DROP DATABASE IF EXISTS `blog`;
CREATE DATABASE IF NOT EXISTS `blog`;

USE `blog`;

DROP TABLE IF EXISTS `users`;
CREATE TABLE IF NOT EXISTS `users` (
	user_id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL,
    psswrd VARCHAR(50) NOT NULL,
	added_by INT NOT NULL DEFAULT 1,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    comments VARCHAR(128) DEFAULT NULL,
    CONSTRAINT PRIMARY KEY (user_id)
);

DROP TABLE IF EXISTS `tags`;
CREATE TABLE IF NOT EXISTS `tags` (
	tag_id INT NOT NULL AUTO_INCREMENT,
    tag_text VARCHAR(50) NOT NULL,
	added_by INT NOT NULL DEFAULT 1,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    comments VARCHAR(128) DEFAULT NULL,
    CONSTRAINT PRIMARY KEY (tag_id),
    CONSTRAINT FOREIGN KEY ausersdded_by (added_by) REFERENCES users (user_id) ON DELETE NO ACTION ON UPDATE CASCADE
);

DROP TABLE IF EXISTS `articles`;
CREATE TABLE IF NOT EXISTS `articles` (
	article_id INT NOT NULL AUTO_INCREMENT,
    title VARCHAR(128) NOT NULL,
    content TEXT,
    user_id INT NOT NULL,
    added_by INT NOT NULL DEFAULT 1,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    comments VARCHAR(128) DEFAULT NULL,
    CONSTRAINT PRIMARY KEY (article_id),
    CONSTRAINT FOREIGN KEY user_id (user_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY added_by (added_by) REFERENCES users (user_id) ON DELETE NO ACTION ON UPDATE CASCADE
);

DROP TABLE IF EXISTS `comments`;
CREATE TABLE IF NOT EXISTS `comments` (
	comment_id INT NOT NULL AUTO_INCREMENT,
    user_id INT NOT NULL,
    content TEXT NOT NULL,
    article_id INT NOT NULL,
    comment_ref INT DEFAULT NULL,
    added_by INT NOT NULL DEFAULT 1,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    comments VARCHAR(128) DEFAULT NULL,
    CONSTRAINT PRIMARY KEY (comment_id),
    CONSTRAINT FOREIGN KEY user_id (user_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY article_id (article_id) REFERENCES articles (article_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY added_by (added_by) REFERENCES users (user_id) ON DELETE NO ACTION ON UPDATE CASCADE
);

DROP TABLE IF EXISTS `articles_tags`;
CREATE TABLE IF NOT EXISTS `articles_tags` (
	id INT NOT NULL AUTO_INCREMENT,
    article_id INT NOT NULL,
    tag_id INT NOT NULL,
	added_by INT NOT NULL DEFAULT 1,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    comments VARCHAR(128) DEFAULT NULL,
    CONSTRAINT PRIMARY KEY (id),
    CONSTRAINT UNIQUE KEY article_tag_key (article_id,tag_id),
    CONSTRAINT FOREIGN KEY article_id (article_id) REFERENCES articles (article_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY tag_id (tag_id) REFERENCES tags (tag_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY added_by (added_by) REFERENCES users (user_id) ON DELETE NO ACTION ON UPDATE CASCADE
);

DROP TABLE IF EXISTS `likes`;
CREATE TABLE IF NOT EXISTS `likes` (
	like_id INT NOT NULL AUTO_INCREMENT,
    article_id INT NOT NULL,
    user_id INT NOT NULL,
    grade ENUM('LIKE','DISLIKE') NOT NULL DEFAULT 'DISLIKE',
    added_by INT NOT NULL DEFAULT 1,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    comments VARCHAR(128) DEFAULT NULL,
    CONSTRAINT PRIMARY KEY (like_id),
    CONSTRAINT UNIQUE KEY article_user_key (article_id,user_id),
    CONSTRAINT FOREIGN KEY article_id (article_id) REFERENCES articles (article_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY user_id (user_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY added_by (added_by) REFERENCES users (user_id) ON DELETE NO ACTION ON UPDATE CASCADE
);

